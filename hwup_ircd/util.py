# -*- coding: utf-8 -*-# In python2 print Ã¨ uno statement, utilizziamo la print di python3# che Ã¨ una funzione per poter definire un endline diversofrom __future__ import print_functionimport tracebackimport sys# DEBUG assumerÃ  un valore booleano dopo il parsing di argparseDEBUG = None#############################################def print_log(msg, end='\n'): # a default stampa a fine stringa il newline    print('-L- %s' % msg, end=end)#############################################    def print_exc(exc=None, msg=None, debug=DEBUG):    empty_arg = not exc and not msg    if empty_arg:        raise TypeError('print_exc() takes at least one argument (0 given)')       if exc and msg:         print('-E- [%s]: %s' % (exc.__class__.__name__, msg))    elif exc and not msg:         print('-E- [%s]: %s' % (exc.__class__.__name__, str(exc)))    else:         print('-E- %s' % msg)            if debug and exc:        traceback.print_exc(file=sys.stderr)        #############################################def print_warn(msg, end='\n'): # a default stampa a fine stringa il newline    print('-W- %s' % msg, end=end)    #############################################def print_replyToClient(client, reply):    print("-CLI- %s -> %s" % (client, reply))        